/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$ico-service-movies-name: 'ico_service_movies';
$ico-service-movies-x: 0px;
$ico-service-movies-y: 0px;
$ico-service-movies-offset-x: 0px;
$ico-service-movies-offset-y: 0px;
$ico-service-movies-width: 27px;
$ico-service-movies-height: 27px;
$ico-service-movies-total-width: 54px;
$ico-service-movies-total-height: 27px;
$ico-service-movies-image: 'main_sprite.png';
$ico-service-movies: 0px 0px 0px 0px 27px 27px 54px 27px '/images/main_sprite.png' 'ico_service_movies';
$ico-service-museum-name: 'ico_service_museum';
$ico-service-museum-x: 27px;
$ico-service-museum-y: 0px;
$ico-service-museum-offset-x: -27px;
$ico-service-museum-offset-y: 0px;
$ico-service-museum-width: 27px;
$ico-service-museum-height: 27px;
$ico-service-museum-total-width: 54px;
$ico-service-museum-total-height: 27px;
$ico-service-museum-image: 'main_sprite.png';
$ico-service-museum: 27px 0px -27px 0px 27px 27px 54px 27px '/images/main_sprite.png' 'ico_service_museum';
$spritesheet-width: 54px;
$spritesheet-height: 27px;
$spritesheet-image: 'main_sprite.png';
$spritesheet-sprites: ($ico-service-movies, $ico-service-museum, );
$spritesheet: (54px, 27px, 'main_sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: list($sprite, 4);
}

@mixin sprite-height($sprite) {
  height: list($sprite, 5);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: list($sprite, 2);
  $sprite-offset-y: list($sprite, 3);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: list($sprite, 8);
  background-image: url($sprite-image);
}

@mixin sprite($sprite) {
/*
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
*/
  $sprite-image: list($sprite, 8);
  background-image: url($sprite-image);

  $sprite-offset-x: list($sprite, 2);
  $sprite-offset-y: list($sprite, 3);
  background-position: $sprite-offset-x  $sprite-offset-y; 

  width: list($sprite, 4);

  height: list($sprite, 5);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: list($sprite, 9);
    .($sprite-name) {
      @include sprite($sprite);
    }
  }
}

